async function checkConfig(){try{var e=await getConfig();if(e.error)return!1;if(!e.configured)return!1}catch(e){return console.error(e),!1}return!0}async function sendConfig(e){e=await fetch("/api/v1/config",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({config:e})});if(!e.ok)return e.status}async function getConfig(){try{return await(await fetch("/api/v1/config",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"})).json()}catch(e){return console.error(e),{error:e.message}}}async function sendFlag(e){return await fetch("/api/v1/submit-flag",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({flag:e})})}async function deleteFlag(e){return await fetch("/api/v1/delete-flag?flag="+e,{method:"DELETE",credentials:"include"})}function getServiceEntries(e){return e.value.map(e=>{var[e,t]=e.value.split(":");return{name:e.trim(),port:parseInt(t,10)}}).filter(e=>e.name&&!isNaN(e.port))}function validateConfigForm(e,t){var n,a,r={team_token:e=>0<e.length,host_flagchecker:e=>0<e.length,protocol:e=>0<e.length,my_team_ip:e=>/^((25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(25[0-5]|2[0-4]\d|[01]?\d\d?)$/.test(e),regex_flag:e=>{try{return new RegExp(e),!0}catch(e){return!1}},format_ip_teams:e=>/^((\d{1,3}|\{\})\.){3}(\d{1,3}|\{\})$/.test(e),range_ip_teams:e=>0<parseInt(e),max_flag_batch_size:e=>0<parseInt(e),submit_flag_checker_time:e=>0<=parseInt(e)},i=e.getElementById("config-result");for([n,a]of Object.entries(r)){var o=e.getElementById(n),c=o?.value.trim();if(!c||!a(c))return o?.focus(),i.textContent="Invalid or missing: "+n.replace(/_/g," "),i.classList.add("text-red-500"),!1}return 0!==getServiceEntries(t).length||(e.getElementById("services").focus(),!(i.textContent="Please provide at least one valid service (name:port)"))}function buildConfigFromDOM(t,e){var n=e=>t.getElementById(e)?.value.trim();return{configured:!0,server:{team_token:n("team_token"),host_flagchecker:n("host_flagchecker"),protocol:n("protocol"),max_flag_batch_size:Number(n("max_flag_batch_size")),submit_flag_checker_time:Number(n("submit_flag_checker_time"))},client:{services:getServiceEntries(e),range_ip_teams:Number(n("range_ip_teams")),format_ip_teams:n("format_ip_teams"),my_team_ip:n("my_team_ip"),regex_flag:n("regex_flag")}}}async function openModal(){document.getElementById("dialog").classList.remove("hidden"),document.getElementById("table-head").classList.remove("sticky"),await FillModalFields()}export{checkConfig,sendConfig,getConfig,sendFlag,deleteFlag,getServiceEntries,validateConfigForm,buildConfigFromDOM,openModal};