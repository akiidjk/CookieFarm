//go:build !windows
// +build !windows

package exploit

import (
	"fmt"
	"os"
	"os/exec"
	"syscall"
	"time"

	"github.com/ByteTheCookies/CookieFarm/internal/client/config"
	"github.com/ByteTheCookies/CookieFarm/pkg/logger"
)

func Detach() {
	filteredArgs := []string{}
	cm := config.GetConfigManager()
	for _, arg := range os.Args[1:] {
		if arg != "--detach" && arg != "-d" {
			filteredArgs = append(filteredArgs, arg)
		}
	}
	filteredArgs = append(filteredArgs, "-N")
	cmd := exec.Command(os.Args[0], filteredArgs...)

	cmd.Stdout = nil
	cmd.Stderr = nil
	cmd.Stdin = nil
	cmd.SysProcAttr = &syscall.SysProcAttr{Setsid: true}

	err := cmd.Start()
	if err != nil {
		fmt.Printf("%s %s %s[ERROR]%s Error during detach: %v\n",
			logger.Gray, time.Now().Format("15:04:05"), logger.Red, logger.Reset, err)
		os.Exit(1)
	}

	fmt.Printf("%s %s %s[INFO]%s Process detached with PID: %d\n",
		logger.Gray, time.Now().Format("15:04:05"), logger.Blue, logger.Reset, cmd.Process.Pid)

	if !cm.GetUseTUI() {
		os.Exit(0)
	}
}
